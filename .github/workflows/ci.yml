on:
  push:
    branches: [ master ]
  # release:
  #   types: [created]
name: Deploy to Amazon ECS
jobs:
  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v2
    - name: Set up Python
      uses: actions/setup-python@v2
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-west-2
    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

    - name: Set Service name
      env:
        ECR_REPOSITORY: ${{ secrets.AWS_ECR_REPOSITORY }}
      run: echo "SERVICE_NAME=$(echo $ECR_REPOSITORY | cut -f1 -d"-")" >> $GITHUB_ENV
    - name: Echo Service name
      run: echo $SERVICE_NAME

    - name: Build, tag, and push image to Amazon ECR
      id: build-image
      env:
        ECR_REGISTRY: ${{ secrets.AWS_IMAGE_REGISTRY }}
        ECR_REPOSITORY: ${{ secrets.AWS_ECR_REPOSITORY }}
      run: |
        docker build . -t "$ECR_REGISTRY/$ECR_REPOSITORY:${GITHUB_SHA::8}" -f docker/production/app/Dockerfile
        echo "::set-output name=image::$ECR_REGISTRY/$ECR_REPOSITORY:"${GITHUB_SHA::8}
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:${GITHUB_SHA::8}

    # - name: Deploy to cluster
    #   id: rolling-update
    #   env:
    #     SERVICE: ${{ secrets.AWS_ECR_REPOSITORY }}
    #   run:
    #     aws ecs update-service --service service-michello --cluster shipit-prod --force-new-deployment
